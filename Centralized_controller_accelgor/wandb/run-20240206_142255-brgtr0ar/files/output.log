generation:  0
time since start:  0.00020647048950195312
time spent on rollout: 0
generation:  10
time since start:  328.77748823165894
time spent on rollout: 323.8897125720978
generation:  20
time since start:  616.5361747741699
time spent on rollout: 283.3445510864258
generation:  30
time since start:  904.3154699802399
time spent on rollout: 283.3675711154938
generation:  40
time since start:  1192.0670313835144
time spent on rollout: 283.3418035507202
generation:  50
time since start:  1479.8013343811035
time spent on rollout: 283.32271909713745
generation:  60
time since start:  1767.5204293727875
time spent on rollout: 283.3075604438782
generation:  70
time since start:  2055.2910170555115
time spent on rollout: 283.3599636554718
generation:  80
time since start:  2343.09441280365
time spent on rollout: 283.3913142681122
generation:  90
time since start:  2630.8737182617188
time spent on rollout: 283.36590099334717
generation:  100
time since start:  2918.6449325084686
time spent on rollout: 283.3619647026062
generation:  110
time since start:  3206.3875319957733
time spent on rollout: 283.3318712711334
generation:  120
time since start:  3494.141697406769
time spent on rollout: 283.34422492980957
generation:  130
time since start:  3781.908931016922
time spent on rollout: 283.35595774650574
generation:  140
time since start:  4069.7165989875793
time spent on rollout: 283.39664030075073
generation:  150
time since start:  4357.486510276794
time spent on rollout: 283.3584403991699
generation:  160
time since start:  4645.2893216609955
time spent on rollout: 283.39257740974426
[ 0.019 -0.475  1.703 ...  0.724 -0.347 -0.493]
-4.6774616
[ 0.019 -0.475  1.703 ...  0.724 -0.347 -0.493]
-4.6774616
(27156,)
-4.6774616
[ 0.019 -0.475  1.703 ...  0.724 -0.347 -0.493]
-4.6774616
(27156,)
-4.6774616
(27156,)
-4.6774616
(27156,)
-4.6774616
{'params': {'layers_0': {'kernel': Array([[-0.068, -0.05 , -0.061, ...,  0.021,  0.13 ,  0.078],
       [-0.142,  0.004,  0.144, ...,  0.05 ,  0.139,  0.035],
       [ 0.021,  0.139, -0.213, ...,  0.109, -0.094,  0.145],
       ...,
       [-0.045,  0.146, -0.012, ...,  0.031,  0.124, -0.097],
       [-0.094,  0.071,  0.051, ..., -0.27 ,  0.004,  0.185],
       [ 0.261, -0.128,  0.072, ..., -0.018,  0.155,  0.015]], dtype=float32), 'bias': Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)}, 'layers_1': {'kernel': Array([[-0.023, -0.149, -0.075, ...,  0.042, -0.097, -0.071],
       [ 0.046,  0.044,  0.005, ..., -0.04 , -0.099,  0.136],
       [ 0.124, -0.073, -0.057, ..., -0.048,  0.019, -0.071],
       ...,
       [ 0.054, -0.061, -0.004, ..., -0.075, -0.115,  0.059],
       [-0.091, -0.001,  0.042, ..., -0.14 , -0.079, -0.157],
       [-0.094, -0.031,  0.087, ..., -0.022, -0.034, -0.025]], dtype=float32), 'bias': Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)}, 'layers_2': {'kernel': Array([[ 0.025,  0.064,  0.179, ...,  0.022,  0.181, -0.053],
       [ 0.157,  0.111, -0.035, ..., -0.099, -0.096,  0.095],
       [ 0.036, -0.129,  0.164, ...,  0.011,  0.035,  0.016],
       ...,
       [ 0.065, -0.095, -0.041, ...,  0.004,  0.096, -0.098],
       [ 0.008,  0.003,  0.116, ...,  0.108, -0.008, -0.133],
       [-0.023, -0.078, -0.091, ...,  0.007,  0.172,  0.049]], dtype=float32), 'bias': Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32)}}}
(27156,)
-4.6774616
(1, 27156)
-4.6774616
(1, 27156)
-4.6774616
(1, 27156)
-4.6774616
{'params': {'layers_0': {'bias': (1, 128), 'kernel': (1, 62, 128)}, 'layers_1': {'bias': (1, 128), 'kernel': (1, 128, 128)}, 'layers_2': {'bias': (1, 20), 'kernel': (1, 128, 20)}}}
[Array([0., 0., 0.], dtype=float32), Array([0., 0., 0.], dtype=float32), Array([0.  , 0.  , 0.11], dtype=float32), Array([-3.142,  0.   ,  0.   ], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)]
[Array([0., 0., 0.], dtype=float32), Array([0., 0., 0.], dtype=float32), Array([0.  , 0.  , 0.11], dtype=float32), Array([-3.142,  0.   ,  0.   ], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)]
[Array([0., 0., 0.], dtype=float32), Array([0., 0., 0.], dtype=float32), Array([0.  , 0.  , 0.11], dtype=float32), Array([-3.142,  0.   ,  0.   ], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0.], dtype=float32), Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0], dtype=int32)]
[ 0.     0.     0.     0.     0.     0.     0.     0.     0.11  -3.142  0.     0.     0.     0.
  0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.
  0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.
  0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.     0.
  0.     0.     0.     0.     0.     0.   ]
  0.     0.     0.     0.     0.     0.   ]
  0.     0.     0.     0.     0.     0.   ]
  0.     0.     0.     0.     0.     0.   ]
  0.     0.     0.     0.     0.     0.   ]
  0.     0.     0.     0.     0.     0.   ]
1 0.     0.     0.     0.     0.     0.   ]
1 0.     0.     0.     0.     0.     0.   ]
1 0.     0.     0.     0.     0.     0.   ]
2 0.     0.     0.     0.     0.     0.   ]
2 0.     0.     0.     0.     0.     0.   ]
2 0.     0.     0.     0.     0.     0.   ]
2 0.     0.     0.     0.     0.     0.   ]
2 0.     0.     0.     0.     0.     0.   ]
7 0.     0.     0.     0.     0.     0.   ]
7 0.     0.     0.     0.     0.     0.   ]
7 0.     0.     0.     0.     0.     0.   ]
7 0.     0.     0.     0.     0.     0.   ]
7 0.     0.     0.     0.     0.     0.   ]
120.     0.     0.     0.     0.     0.   ]
120.     0.     0.     0.     0.     0.   ]
120.     0.     0.     0.     0.     0.   ]
120.     0.     0.     0.     0.     0.   ]
120.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
170.     0.     0.     0.     0.     0.   ]
[total_num_physics_steps] The total amount of physics steps that happen during one simulation episode: 1250
[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.], 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
	Box(-0.5235988, 0.5235988, (50,), <class 'jax.numpy.float32'>) 0. 0. 0. 0.], 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
	Box(-0.5235988, 0.5235988, (50,), <class 'jax.numpy.float32'>) 0. 0. 0. 0.], 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,
Dict('in_plane_joint_position': Box(-0.5235988, 0.5235988, (25,), <class 'jax.numpy.float32'>), 'out_of_plane_joint_position': Box(-0.5235988, 0.5235988, (25,), <class 'jax.numpy.float32'>), 'in_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'out_of_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'segment_contact': Box(0.0, 1.0, (25,), <class 'jax.numpy.float32'>), 'disk_position': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_rotation': Box(-3.1415927, 3.1415927, (3,), <class 'jax.numpy.float32'>), 'disk_linear_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_angular_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>))
 {'params': {'layers_0': {'bias': (128,), 'kernel': (137, 128)}, 'layers_1': {'bias': (128,), 'kernel': (128, 128)}, 'layers_2': {'bias': (50,), 'kernel': (128, 50)}}} 'jax.numpy.float32'>), 'in_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'out_of_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'segment_contact': Box(0.0, 1.0, (25,), <class 'jax.numpy.float32'>), 'disk_position': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_rotation': Box(-3.1415927, 3.1415927, (3,), <class 'jax.numpy.float32'>), 'disk_linear_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_angular_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>))
 {'params': {'layers_0': {'bias': (128,), 'kernel': (137, 128)}, 'layers_1': {'bias': (128,), 'kernel': (128, 128)}, 'layers_2': {'bias': (50,), 'kernel': (128, 50)}}} 'jax.numpy.float32'>), 'in_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'out_of_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'segment_contact': Box(0.0, 1.0, (25,), <class 'jax.numpy.float32'>), 'disk_position': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_rotation': Box(-3.1415927, 3.1415927, (3,), <class 'jax.numpy.float32'>), 'disk_linear_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_angular_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>))
 {'params': {'layers_0': {'bias': (128,), 'kernel': (137, 128)}, 'layers_1': {'bias': (128,), 'kernel': (128, 128)}, 'layers_2': {'bias': (50,), 'kernel': (128, 50)}}} 'jax.numpy.float32'>), 'in_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'out_of_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'segment_contact': Box(0.0, 1.0, (25,), <class 'jax.numpy.float32'>), 'disk_position': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_rotation': Box(-3.1415927, 3.1415927, (3,), <class 'jax.numpy.float32'>), 'disk_linear_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_angular_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>))
candidate solution shape: (6912, 40626)), 'kernel': (137, 128)}, 'layers_1': {'bias': (128,), 'kernel': (128, 128)}, 'layers_2': {'bias': (50,), 'kernel': (128, 50)}}} 'jax.numpy.float32'>), 'in_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'out_of_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'segment_contact': Box(0.0, 1.0, (25,), <class 'jax.numpy.float32'>), 'disk_position': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_rotation': Box(-3.1415927, 3.1415927, (3,), <class 'jax.numpy.float32'>), 'disk_linear_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_angular_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>))
Reward_type: distancension: 50]: 5s626)), 'kernel': (137, 128)}, 'layers_1': {'bias': (128,), 'kernel': (128, 128)}, 'layers_2': {'bias': (50,), 'kernel': (128, 50)}}} 'jax.numpy.float32'>), 'in_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'out_of_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'segment_contact': Box(0.0, 1.0, (25,), <class 'jax.numpy.float32'>), 'disk_position': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_rotation': Box(-3.1415927, 3.1415927, (3,), <class 'jax.numpy.float32'>), 'disk_linear_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_angular_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>))
Reward_type: distancension: 50]: 5s626)), 'kernel': (137, 128)}, 'layers_1': {'bias': (128,), 'kernel': (128, 128)}, 'layers_2': {'bias': (50,), 'kernel': (128, 50)}}} 'jax.numpy.float32'>), 'in_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'out_of_plane_joint_velocity': Box(-inf, inf, (25,), <class 'jax.numpy.float32'>), 'segment_contact': Box(0.0, 1.0, (25,), <class 'jax.numpy.float32'>), 'disk_position': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_rotation': Box(-3.1415927, 3.1415927, (3,), <class 'jax.numpy.float32'>), 'disk_linear_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>), 'disk_angular_velocity': Box(-inf, inf, (3,), <class 'jax.numpy.float32'>))