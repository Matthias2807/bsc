 experiment:
   interface: 'HPC' # HPC or VSC 
   run_name_format: "{notes} {reward_type} {arm_setup} popsize {es_popsize} {cost_expr} {efficiency_expr} hebbian {hebbian}"
   seed: 2025
 wandb:
   project: "hebbian"
   group: "Single target (accelgor)"
   tags: ["hebbian", "6912_popsize", "[256,256,128]", "reward", "1500 generations", "single rowing target", "15s"]
   notes: "b17_r01"
 morphology:
   arm_setup: [ 5, 5, 5, 5, 5 ]
   joint_control: 'position'
 arena:
   arena_size: !!python/tuple [ 8, 8 ]
   sand_ground_color: False # must be true for light escape environment
 environment:
   reward_type: 'target' # choose from distance, target or light
   sensor_selection: !!python/tuple [ 'joint_position', 'joint_actuator_force', 'segment_contact']
   num_physics_steps_per_control_step: 10
   simulation_time: 15 
   joint_randomization_noise_scale: 0.0
   light_perlin_noise_scale: 4
   target_distance: 7 # rather use the target_distance from the training part
   target_position: [ 7., 0., 0.] # must fit in the arena
   color_contacts: False
   render:
     camera_ids: [ 0, 1 ]
     render_size: [ 480, 640 ] # choose ratio 3:4 --> [ 480, 640  ], [ 720, 960 ], [ 960, 1280 ] (720p), [ 1440, 1920 ] (1080p), [ 3072, 4069 ] (HDTV 4k)
 damage:
   damage: True # try to write code indepent of this argument
   arm_setup_damage: [ 5, 0, 5, 5, 5]
 evolution:
   es_popsize: 6912
   num_generations: 1500
   cost_expr: "nocost" # choose from ["nocost", "torque x angvel", "torque"]
   penal_expr: "nopenal" # choose from ["nopenal", "body_stability"]
   efficiency_expr: "reward" # choose from ["reward", "reward _ cost", "reward + reward _ cost"]
 controller:
   hebbian: True
   num_hebbian_steps_per_control_step: 1
   hidden_layers: [ 256, 256, 128 ]
 training:
   target:
     distance: 7
     num_rowing: 1 # max 5, only 5 different rowing positions possible
     num_reverse_rowing: 0 # max 5, only 5 different rowing positions possible
     num_random_positions: 0
     # total number of targets is the sum of targets in rowing, reverse_rowing and random positions
     parallel_constant: False # whether all parallel environments during training get the same targets
 
